#ifdef GL_ES
precision mediump float;
#endif

varying vec2 varying_texcoord;
uniform sampler2D al_tex;

uniform float water_r;
uniform float water_g;
uniform float water_b;
uniform float dark_water_r;
uniform float dark_water_g;
uniform float dark_water_b;
uniform float time;
uniform float tex_w, tex_h;

bool same(vec4 c1, vec4 c2)
{
	return abs(c1.r-c2.r) < 0.1 && abs(c1.g-c2.g) < 0.1 && abs(c1.b-c2.b) < 0.1;
}

void main()
{
	float one;
	float n;
	float offset;
	n = mod((varying_texcoord.y * tex_h), 18.0) / 18.0;
	offset = sin(n * 6.28318 - time);
	one = 1.0 / tex_w;
	vec2 texcoord2 = vec2(varying_texcoord.x + one * offset, varying_texcoord.y);
	vec2 texcoord3 = vec2(varying_texcoord.x + one * -offset, varying_texcoord.y);
	n = mod((varying_texcoord.x * tex_w), 18.0) / 18.0;
	offset = sin(n * 6.28318 - time);
	one = 1.0 / tex_h;
	vec2 texcoord4 = vec2(varying_texcoord.x, varying_texcoord.y + one * offset);
	vec2 texcoord5 = vec2(varying_texcoord.x, varying_texcoord.y + one * -offset);

	vec4 c = texture2D(al_tex, varying_texcoord);
	vec4 c2 = texture2D(al_tex, texcoord2);
	vec4 c3 = texture2D(al_tex, texcoord3);
	vec4 c4 = texture2D(al_tex, texcoord4);
	vec4 c5 = texture2D(al_tex, texcoord5);

	vec4 water = vec4(water_r, water_g, water_b, 1.0);
	vec4 dark_water = vec4(dark_water_r, dark_water_g, dark_water_b, 1.0);

	if (!same(c, dark_water)) {
		gl_FragColor = c;
	}
	else {
		if (same(c2, water)) {
			gl_FragColor = water;
		}
		else {
			if (same(c3, water)) {
				gl_FragColor = water;
			}
			else {
				gl_FragColor = c;
			}
		}
	}
}
